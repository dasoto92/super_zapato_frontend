/*!
 * react-show v3.0.2 - https://react-show.js.org
 * MIT Licensed
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"), require("prop-types"));
	else if(typeof define === 'function' && define.amd)
		define(["react", "prop-types"], factory);
	else if(typeof exports === 'object')
		exports["ReactShow"] = factory(require("react"), require("prop-types"));
	else
		root["ReactShow"] = factory(root["React"], root["PropTypes"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(1);


/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Animate", function() { return Animate; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_raf__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_raf___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_raf__);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _class, _temp, _initialiseProps;

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/* eslint-disable no-restricted-syntax, react/forbid-prop-types */




var easings = {
  // Cubic
  easeInCubic: 'cubic-bezier(0.550, 0.055, 0.675, 0.190)',
  easeOutCubic: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)',
  easeInOutCubic: 'cubic-bezier(0.645, 0.045, 0.355, 1.000)',

  // Circ
  easeInCirc: 'cubic-bezier(0.600, 0.040, 0.980, 0.335)',
  easeOutCirc: 'cubic-bezier(0.075, 0.820, 0.165, 1.000)',
  easeInOutCirc: 'cubic-bezier(0.785, 0.135, 0.150, 0.860)',

  // Expo
  easeInExpo: 'cubic-bezier(0.950, 0.050, 0.795, 0.035)',
  easeOutExpo: 'cubic-bezier(0.190, 1.000, 0.220, 1.000)',
  easeInOutExpo: 'cubic-bezier(1.000, 0.000, 0.000, 1.000)',

  // Quad
  easeInQuad: 'cubic-bezier(0.550, 0.085, 0.680, 0.530)',
  easeOutQuad: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',
  easeInOutQuad: 'cubic-bezier(0.455, 0.030, 0.515, 0.955)',

  // Quart
  easeInQuart: 'cubic-bezier(0.895, 0.030, 0.685, 0.220)',
  easeOutQuart: 'cubic-bezier(0.165, 0.840, 0.440, 1.000)',
  easeInOutQuart: 'cubic-bezier(0.770, 0.000, 0.175, 1.000)',

  // Quint
  easeInQuint: 'cubic-bezier(0.755, 0.050, 0.855, 0.060)',
  easeOutQuint: 'cubic-bezier(0.230, 1.000, 0.320, 1.000)',
  easeInOutQuint: 'cubic-bezier(0.860, 0.000, 0.070, 1.000)',

  // Sine
  easeInSine: 'cubic-bezier(0.470, 0.000, 0.745, 0.715)',
  easeOutSine: 'cubic-bezier(0.390, 0.575, 0.565, 1.000)',
  easeInOutSine: 'cubic-bezier(0.445, 0.050, 0.550, 0.950)',

  // Back
  easeInBack: 'cubic-bezier(0.600, -0.280, 0.735, 0.045)',
  easeOutBack: 'cubic-bezier(0.175,  0.885, 0.320, 1.275)',
  easeInOutBack: 'cubic-bezier(0.680, -0.550, 0.265, 1.550)'
};

var Animate = (_temp = _class = function (_React$Component) {
  _inherits(Animate, _React$Component);

  function Animate(props) {
    _classCallCheck(this, Animate);

    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

    _initialiseProps.call(_this);

    var _this$props = _this.props,
        show = _this$props.show,
        mounted = _this$props.mounted,
        transitionOnMount = _this$props.transitionOnMount,
        start = _this$props.start,
        update = _this$props.update,
        enter = _this$props.enter;


    _this.stage = false;
    _this.stageStyles = {};
    _this.transitioning = false;

    _this.state = {
      mountContent: mounted || show,
      currentStyle: transitionOnMount ? start || update : update || enter,
      styleOverrides: {}
    };
    return _this;
  }

  Animate.prototype.componentDidMount = function componentDidMount() {
    var _props = this.props,
        transitionOnMount = _props.transitionOnMount,
        show = _props.show,
        enter = _props.enter,
        update = _props.update;

    if (transitionOnMount && show) {
      this.transition('enter', enter || update);
    }
  };

  Animate.prototype.componentDidUpdate = function componentDidUpdate(oldProps) {
    var _this2 = this;

    var _props2 = this.props,
        show = _props2.show,
        update = _props2.update,
        enter = _props2.enter,
        leave = _props2.leave,
        start = _props2.start;
    var mountContent = this.state.mountContent;


    if (!oldProps.show && show) {
      if (mountContent && this.stage === 'leave') {
        return this.transition('update', update || enter);
      } else if (!mountContent) {
        // eslint-disable-next-line
        this.setState({
          currentStyle: start || update
        });
      }
      return this.transition('enter', enter || update);
    }

    if (oldProps.show && !show) {
      return this.transition('leave', leave || start);
    }

    if ((!this.stage || this.stage === 'update') && show && update) {
      var shouldUpdate = Object.keys(update).some(function (key) {
        return _this2.stageStyles[key] !== update[key];
      });

      if (shouldUpdate) {
        return this.transition('update', update);
      }
    }
  };

  Animate.prototype.render = function render() {
    var _this3 = this;

    var _props3 = this.props,
        Comp = _props3.component,
        children = _props3.children,
        originalShow = _props3.show,
        easing = _props3.easing,
        duration = _props3.duration,
        transitionProperty = _props3.transitionProperty,
        unmountOnHide = _props3.unmountOnHide,
        transitionOnMount = _props3.transitionOnMount,
        show = _props3.show,
        style = _props3.style,
        update = _props3.update,
        leave = _props3.leave,
        enter = _props3.enter,
        innerRef = _props3.innerRef,
        onFinish = _props3.onFinish,
        mounted = _props3.mounted,
        rest = _objectWithoutProperties(_props3, ['component', 'children', 'show', 'easing', 'duration', 'transitionProperty', 'unmountOnHide', 'transitionOnMount', 'show', 'style', 'update', 'leave', 'enter', 'innerRef', 'onFinish', 'mounted']);

    var _state = this.state,
        mountContent = _state.mountContent,
        currentStyle = _state.currentStyle;

    return mountContent ? __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
      Comp,
      _extends({
        ref: function ref(el) {
          _this3.handleRef(el);
          if (innerRef) {
            innerRef(el);
          }
        },
        onTransitionEnd: this.transitionEnd,
        style: this.makeStyles(currentStyle)
      }, rest),
      children
    ) : null;
  };

  return Animate;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component), _class.easings = easings, _class.propTypes = {
  component: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string,
  show: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool,
  easing: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string,
  duration: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.number,
  mounted: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool,
  transitionProperty: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string,
  unmountOnHide: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool,
  style: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object,
  start: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object,
  enter: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object,
  update: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object,
  leave: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object,
  onFinish: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func,
  transitionOnMount: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool,
  children: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.node.isRequired
}, _class.defaultProps = {
  component: 'div',
  show: true,
  easing: 'easeOutQuad',
  duration: 300,
  transitionProperty: 'all',
  mounted: false,
  unmountOnHide: true,
  transitionOnMount: true,
  style: undefined,
  start: undefined,
  enter: undefined,
  update: undefined,
  leave: undefined,
  onFinish: function onFinish() {}
}, _initialiseProps = function _initialiseProps() {
  var _this4 = this;

  this.ensureMounted = function () {
    return new Promise(function (resolve) {
      var check = function check() {
        if (_this4.el) {
          return resolve();
        }
        __WEBPACK_IMPORTED_MODULE_2_raf___default()(function () {
          _this4.setState({
            mountContent: true
          }, check);
        });
      };
      check();
    });
  };

  this.ensureStyles = function (styles) {
    return new Promise(function (resolve) {
      var check = function check() {
        return _this4.setState(function () {
          return {
            styleOverrides: styles
          };
        }, function () {
          __WEBPACK_IMPORTED_MODULE_2_raf___default()(function () {
            if (Object.keys(styles).some(function (key) {
              return !_this4.el || _this4.el.style[key] !== styles[key];
            })) {
              return check();
            }
            resolve();
          });
        });
      };
      check();
    });
  };

  this.transition = function (stage, styles) {
    if (!styles) {
      throw new Error('ReactShow: No styles were resolved for the "' + stage + '" prop!');
    }

    var show = _this4.props.show;
    var currentStyle = _this4.state.currentStyle;


    _this4.stage = stage;
    _this4.stageStyles = styles;
    _this4.transitioning = true;

    var wasAutoWidth = void 0;
    var wasAutoHeight = void 0;
    var isAutoChanged = void 0;

    return Promise.resolve().then(function () {
      if (show) {
        return _this4.ensureMounted();
      }
    }).then(function () {
      wasAutoWidth = _this4.isProp(currentStyle, 'width', 'auto');
      wasAutoHeight = _this4.isProp(currentStyle, 'height', 'auto');
      var isAutoWidth = _this4.isProp(styles, 'width', 'auto');
      var isAutoHeight = _this4.isProp(styles, 'height', 'auto');

      var isAutoWidthChanged = wasAutoWidth !== isAutoWidth;
      var isAutoHeightChanged = wasAutoHeight !== isAutoHeight;
      isAutoChanged = isAutoWidthChanged || isAutoHeightChanged;

      var measurements = void 0;

      if (isAutoChanged) {
        measurements = _this4.measure();
        _this4.setState({
          styleOverrides: _extends({
            overflow: 'hidden'
          }, isAutoWidthChanged ? { width: measurements.width + 'px' } : {}, isAutoHeightChanged ? { height: measurements.height + 'px' } : {})
        });
        return _this4.ensureStyles(_extends({
          overflow: 'hidden'
        }, isAutoWidthChanged ? { width: measurements.width + 'px' } : {}, isAutoHeightChanged ? { height: measurements.height + 'px' } : {}));
      }

      _this4.setState({
        styleOverrides: {}
      });
    }).then(function () {
      __WEBPACK_IMPORTED_MODULE_2_raf___default()(function () {
        _this4.setState(function (_ref) {
          var currentStyle = _ref.currentStyle,
              styleOverrides = _ref.styleOverrides;

          var nextStyle = _extends({}, currentStyle, styles);

          return {
            // stage,
            mountContent: true,
            currentStyle: nextStyle,
            styleOverrides: isAutoChanged ? _extends({}, styleOverrides, wasAutoWidth ? { width: nextStyle.width } : {}, wasAutoHeight ? { height: nextStyle.height } : {}) : {}
          };
        });
      });
    });
  };

  this.transitionEnd = function (e) {
    var _props4 = _this4.props,
        unmountOnHide = _props4.unmountOnHide,
        onFinish = _props4.onFinish;


    e.persist();

    // Only handle transitionEnd for this element
    if (e.target !== _this4.el) {
      return;
    }

    // We have to debounce the action of stopping
    // the "transition" state, since onTransitionEnd
    // will fire more than once if there are multiple
    // properties that were transitioned.

    if (_this4.transitionRAF) {
      __WEBPACK_IMPORTED_MODULE_2_raf___default.a.cancel(_this4.transitionRAF);
    }
    _this4.transitionRAF = __WEBPACK_IMPORTED_MODULE_2_raf___default()(function () {
      var shouldHide = _this4.stage === 'leave';
      _this4.transitioning = false;
      _this4.stage = false;
      _this4.setState({
        mountContent: !(shouldHide && unmountOnHide),
        styleOverrides: {} // This is to make sure the auto/hidden overrides are gone
      }, onFinish);
    });
  };

  this.handleRef = function (el) {
    _this4.el = el;
  };

  this.isProp = function (style, prop, value) {
    return style[prop] === value;
  };

  this.measure = function () {
    if (!_this4.el) {
      return {};
    }
    return {
      width: _this4.el.scrollWidth,
      height: _this4.el.scrollHeight
    };
  };

  this.makeStyles = function () {
    var _props5 = _this4.props,
        style = _props5.style,
        transitionProperty = _props5.transitionProperty,
        duration = _props5.duration,
        easing = _props5.easing;
    var _state2 = _this4.state,
        currentStyle = _state2.currentStyle,
        styleOverrides = _state2.styleOverrides;


    var resolvedEasing = easings[easing] || easing || 'ease-out';

    return _extends({
      transitionProperty: transitionProperty,
      transitionDuration: duration + 'ms',
      transitionTimingFunction: '' + resolvedEasing
    }, style, currentStyle, styleOverrides);
  };
}, _temp);

// I'll let someone smarter than me figure out how to do this ;)

// export class AnimateGroup extends React.Component {
//   constructor (props) {
//     super(props)

//     const { data } = props

//     this.nodes = this.makeNodes(data)
//   }
//   componentDidUpdate () {
//     const { data } = this.props

//     const newNodes = this.makeNodes(data)

//     let needsUpdate

//     if (newNodes.some(node => !this.nodes.find(d => d.key === node.key))) {
//       needsUpdate = 'diff'
//     }

//     if (needsUpdate) {
//       console.log(needsUpdate, newNodes, this.nodes)
//       this.nodes = this.updateNodes(newNodes)
//       this.forceUpdate()
//     }
//   }
//   makeNodes = data => {
//     const { getKey } = this.props

//     return data.map(datum => ({
//       key: getKey(datum),
//       data: datum,
//       show: true,
//     }))
//   }
//   updateNodes = next => {
//     const nodes = []

//     this.nodes.forEach(node => {
//       if (next.find(d => d.key === node.key)) {
//         return
//       }
//       exiting.push({
//         ...node,
//         show: false,
//       })
//     })

//     return [...next, ...exiting]
//   }
//   removeNode = node => {
//     this.nodes = this.nodes.filter(d => d.key !== node.key)
//     this.forceUpdate()
//   }
//   render () {
//     const {
//       data,
//       getKey,
//       children,
//       render,
//       start,
//       enter,
//       update,
//       leave,
//       duration,
//       easing,
//       ...rest
//     } = this.props
//     return (
//       <React.Fragment>
//         {this.nodes.map((node, i) => (
//           <Animate
//             key={node.key}
//             show={node.show}
//             start={typeof start === 'function' ? start(node.data, node.key, i) : start}
//             enter={typeof enter === 'function' ? enter(node.data, node.key, i) : enter}
//             update={typeof update === 'function' ? update(node.data, node.key, i) : update}
//             leave={typeof leave === 'function' ? leave(node.data, node.key, i) : leave}
//             onFinish={() => {
//               if (!node.show) {
//                 this.removeNode(node)
//               }
//             }}
//             {...rest}
//           >
//             {(render || children)(node.data)}
//           </Animate>
//         ))}
//       </React.Fragment>
//     )
//   }
// }

// function mergeNodes (left, right) {
//   let nodes = []

//   let lastRightIndex = 0

//   left.forEach(l => {
//     const index = right.findIndex(r => r.key === l.key)
//     if (index === -1) {
//       return nodes.push(l)
//     }
//     nodes = [...nodes, ...right.slice(lastRightIndex, index)]
//     lastRightIndex = index
//   })

//   return nodes
// }

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_2__;

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_3__;

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var now = __webpack_require__(6)
  , root = typeof window === 'undefined' ? global : window
  , vendors = ['moz', 'webkit']
  , suffix = 'AnimationFrame'
  , raf = root['request' + suffix]
  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]

for(var i = 0; !raf && i < vendors.length; i++) {
  raf = root[vendors[i] + 'Request' + suffix]
  caf = root[vendors[i] + 'Cancel' + suffix]
      || root[vendors[i] + 'CancelRequest' + suffix]
}

// Some versions of FF have rAF but not cAF
if(!raf || !caf) {
  var last = 0
    , id = 0
    , queue = []
    , frameDuration = 1000 / 60

  raf = function(callback) {
    if(queue.length === 0) {
      var _now = now()
        , next = Math.max(0, frameDuration - (_now - last))
      last = next + _now
      setTimeout(function() {
        var cp = queue.slice(0)
        // Clear queue here to prevent
        // callbacks from appending listeners
        // to the current frame's queue
        queue.length = 0
        for(var i = 0; i < cp.length; i++) {
          if(!cp[i].cancelled) {
            try{
              cp[i].callback(last)
            } catch(e) {
              setTimeout(function() { throw e }, 0)
            }
          }
        }
      }, Math.round(next))
    }
    queue.push({
      handle: ++id,
      callback: callback,
      cancelled: false
    })
    return id
  }

  caf = function(handle) {
    for(var i = 0; i < queue.length; i++) {
      if(queue[i].handle === handle) {
        queue[i].cancelled = true
      }
    }
  }
}

module.exports = function(fn) {
  // Wrap in a new function to prevent
  // `cancel` potentially being assigned
  // to the native rAF function
  return raf.call(root, fn)
}
module.exports.cancel = function() {
  caf.apply(root, arguments)
}
module.exports.polyfill = function(object) {
  if (!object) {
    object = root;
  }
  object.requestAnimationFrame = raf
  object.cancelAnimationFrame = caf
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 5 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {// Generated by CoffeeScript 1.12.2
(function() {
  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;

  if ((typeof performance !== "undefined" && performance !== null) && performance.now) {
    module.exports = function() {
      return performance.now();
    };
  } else if ((typeof process !== "undefined" && process !== null) && process.hrtime) {
    module.exports = function() {
      return (getNanoSeconds() - nodeLoadTime) / 1e6;
    };
    hrtime = process.hrtime;
    getNanoSeconds = function() {
      var hr;
      hr = hrtime();
      return hr[0] * 1e9 + hr[1];
    };
    moduleLoadTime = getNanoSeconds();
    upTime = process.uptime() * 1e9;
    nodeLoadTime = moduleLoadTime - upTime;
  } else if (Date.now) {
    module.exports = function() {
      return Date.now() - loadTime;
    };
    loadTime = Date.now();
  } else {
    module.exports = function() {
      return new Date().getTime() - loadTime;
    };
    loadTime = new Date().getTime();
  }

}).call(this);

//# sourceMappingURL=performance-now.js.map

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))

/***/ }),
/* 7 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ })
/******/ ]);
});